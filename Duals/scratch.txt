f(x) s.t. x=a, x=b
Clearly soln. is ∞ if a ≠ b

f(x)+λ(a-x)+ν(b-x)

f(x)-(λ+ν)x+λa+νb

Let ν = ε-λ

λ, ε

f(x)-εx+λa+(ε-λ)b
f(x)-εx+λ(a-b)+εb

If a-b, then taking λ to -∞ or +∞ takes L(x,λ,ν) to -∞

Dual has a=b
--
ι[⊤] = 0
ι[⊥] = 1
f(x)+λι[x∈D]

Unconstrained min: if x∈D min f(x)
                      x∉D anything

So g(λ) = min of penalise going outside of D by λ.
   g(0) = min f(x)
g(λ) < x* for all λ
In fact, as λ→∞ we get x*

Speculation
-----------

K:M→C, T:M→A
T - objective
K - constraint
Extend "objective" to C(Km',c)·Tm
c is Lagrange multiplier
Lan_K T - K is constraint, T is objective

Kan Extension
-------------

      objective
      X
  A --> C
  |    /
F |  /  L
  |/
  v
  B

h is objective, g is constraint
Lan :: (g b -> a) -> h b -> Lan g h a


This is coproduct.

Co-equaliser: a⇒b is just b is it not?

Conversely, colimit is lowest upper bound

What is a natural transformation in Pos?

Given two monotone functions F:A→B, G:A→B.
α:F ⇒ G
α(X): F(X) → G(X)
I.e. F(X) always <= G(X).
Morphisms are just ≤

Also

a : X → Y
F(X) → G(X)
  ↓F(a)  ↓G(a)
F(Y) → G(Y)

Nat trans are just functions that are always less than another

Kan extension

    X
A ----> C
|      ^
|     /
|F   L
|   /
v  /
B

Lan_F X is monotone function L:B → C
∀a. X(a) ≤ LB(x)
If any other such monotone function M:B → C exists
then ∀a. L(a) ≤ M(a)
So L is a lowest upper bound of sorts.

Extends monotone function on A to smallest possibly larger function on all of B.

Say B is a point.
Then L is a constant function.
So LF is a constant function.
So C is smallest constant function.
C is *the* l.u.b.

Say B has two elememts 0 ≤ 1.
F sorts elememts of A into two "classs", class 0 and class 1.
All of class 0 ≤ all of class 1.
L picks out two elements, L(0) ≤ L(1).
I think these are the lubs of the two classes..

Consider

       1
[0,1]  →  ℝ

  ↓ ι₀

  ℝ

Find "smallest" monotone function on ℝ ≥ identity on [0,1]
Surely
f : (-∞, 0) ↦ -∞
    [0,1] x ↦ x
    (1, ∞)  ↦ 1


---
maximization

min f(x)
s.t. g(x) ≤ 0

min f(x) + λg(x)
s.t. λ ≥ 0
Think of λ as a penalty. Only works as such if λ is +ve. 

max f(x)
s.t. g(x) ≤ 0
Then max f(x)-λg(x)
s.t. λ ≥ 0
--

game theory

maxₓ minᵢ Pᵢⱼxⱼ
          xⱼ ≥ 0
          ∑xⱼ = 1

maxₓ z
     z ≤ Pᵢⱼxⱼ   ∀i
     xⱼ ≥ 0      ∀j
     ∑xⱼ = 1

z + ∑ᵢνᵢ(∑ⱼPᵢⱼxⱼ-z) + ∑ⱼλⱼxⱼ + μ(∑ⱼxⱼ-1)

z + ∑ⱼ(∑ᵢνᵢPᵢⱼ+λⱼ+μ)xⱼ + z∑ᵢνᵢ - μ

min_λμν -μ
        s.t. ∑ᵢνᵢPᵢⱼ+λⱼ+μ = 0   ∀j
             νᵢ ≥ 0             ∀i
             1-∑ᵢνᵢ = 0
             λⱼ ≥ 0             ∀j

∑ᵢνᵢPᵢⱼ+λⱼ+μ = 0
∑ᵢνᵢPᵢⱼ+λⱼ = -μ
∑ᵢνᵢPᵢⱼ ≤ -μ

At min, objective is -μ

Dual is:
min -μ s.t. ∑ᵢνᵢPᵢⱼ ≥ μ
i.e. min max of ∑ᵢνᵢPᵢⱼ

--- fluid dynamics

Assume i<j

minₑ ∑ᵢⱼ (eᵢⱼ-fᵢⱼ)²
s.t. ∑(j:(i,j)∈E) eᵢⱼ - ∑(k:(k,i)∈E)e_kᵢ = 0 ∀i
  (stuff flowing out) - (stuff flowing in)

minₑ ∑ᵢⱼ(eᵢⱼ-fᵢⱼ)² + ∑ᵢλᵢ(∑(j:(i,j)∈E) eᵢⱼ - ∑(k:(k,i)∈E)e_kᵢ)

∂_m_n: 2(e_m_n-f_m_n) + λ_m-λ_n (if (m,n) an edge)

e_mn = f_mn - ½(λ_m-λ_n)
λ_m is negative pressure
High λ_m encourages more flow into m and less out

∑ fᵢⱼ(λᵢ-λⱼ) - ½∑(λᵢ-λⱼ)²
That means high fᵢⱼ encourages higher pressure in i

So intuitively: quadratic term driving pressures to be equal but
fᵢⱼ applies a constant force to drive apart λᵢ and λⱼ when there's
flow from i to j.

Suggests an algorithm even!

-- Make this one problem too

minₓ ½(x-y)²
s.t. Ax = 0

g(x, λ) = ½(x-y)² + λAx

(x-y)+Aᵗλ = 0
x = y-Aᵗλ

L(λ) = ½(Aᵗλ)²+λA(y-Aᵗλ)
     = λAy - ½(Aᵗλ)²
     = yᵗAᵗλ - ½(Aᵗλ)²

---
min c·x s.t. Ax ≥ b

c·x + λ.(Ax-b)    (λ ≤ 0)

min (c + Aᵗλ)·x - λ·b

Only makes sense if c + Aᵗλ = 0, λ ≤ 0

So dual is
max  -λ·b
     λ ≤ 0
     c + Aᵗλ = 0

----
Knapsack ???

max ∑ᵢ vᵢxᵢ
    xᵢ ∈ {0, 1}
    ∑ᵢ wᵢxᵢ ≤ W

vᵢxᵢ + λ(W-∑ᵢwᵢxᵢ) + ∑μᵢxᵢ - ∑νᵢ(xᵢ-1)

∑(vᵢ-λwᵢ+μᵢ-νᵢ)xᵢ + λW +∑νᵢ

min λW+∑νᵢ
s.t. vᵢ = λwᵢ-μᵢ+νᵢ
     λ, μᵢ, νᵢ ≥ 0

min λ(W-∑wᵢ) + ∑μᵢ + ∑vᵢ
s.t. μᵢ≥ λwᵢ-vᵢ
     λ, μᵢ≥ 0

Note, ∑wᵢ is generally > W so first term encourages
large λ

min ∑μᵢ - λ(∑wᵢ-W)
s.t. μᵢ≥ λwᵢ-vᵢ
     λ, μᵢ≥ 0

min ∑μᵢ - λ(∑wᵢ-W)
s.t. μᵢ≥ max(λwᵢ-vᵢ, 0)
     λ ≥ 0

min ∑max(λwᵢ-vᵢ, 0) - λ(∑wᵢ-W)
s.t. λ ≥ 0

When λ ≤ vᵢ/wᵢ ith term is zero

Gradient is W-∑wᵢ for all i s.t. vᵢ/wᵢ > λ

So add items to knapsack in order of vᵢ/wᵢ.
Intuitively obvious? Want biggest back (vᵢ) for the buck (wᵢ).

ℓ₁-norm
-------

min ‖x‖₁
    s.t. Ax=b

‖x‖₁ + λ(Ax-b)

-Aᵗλ ∈ (sign(x₁), …, sign(x_n))
?????

Optimal Transport
-----------------

(We have that ∑vᵢ = ∑wⱼ = 1)

cᵢⱼ = cost transporting one unit from i to j

min ∑ᵢⱼcᵢⱼtᵢⱼ
s.t. ∑ⱼcᵢⱼ = vᵢ, ∑ᵢcᵢⱼ = wⱼ,
     tᵢⱼ ≥ 0

∑ᵢⱼcᵢⱼtᵢⱼ - ∑ᵢλᵢ(∑ⱼtᵢⱼ-vᵢ) - ∑ⱼμⱼ(∑ᵢtᵢⱼ-wⱼ) - νᵢⱼtᵢⱼ

∑ᵢⱼtᵢⱼ(cᵢⱼ - λᵢ-μⱼ-νᵢⱼ) + ∑λᵢvᵢ + ∑μⱼwⱼ

Flip sign of λᵢ

So
max -∑λᵢvᵢ + ∑μⱼwⱼ
s.t. -λᵢ+μⱼ ≤ cᵢⱼ

If -λᵢ+μⱼ > cᵢⱼ then you could make infinite profit


Suppose costs λᵢ to store at start
              μⱼ to store at end
Transport cost is cᵢⱼ
vᵢ at start
wⱼ at end
Choose prices to maximise value increase

--
Theorem of alternative
http://www.matem.unam.mx/omar/math340/thm-alt.html
----------------------
Point in polygon?

min 0
s.t. Ax ≤ b

min λ·(b-Ax)
s.t. λ ≥ 0

min λ.b
s.t. λ ≥ 0
     Aᵗλ = 0

So if there's a solution to Ax ≤ b

max λ·b ≤ 0
for λ ≥ 0
    Aᵗλ = 0 (This is the alternative version at link above)

-- Or this version

min 0
s.t. Ax ≤ b
      x ≥ 0

λ·(Ax-b) - μ·x

min (Aᵗλ-μ)·x - λ·b
s.t. λ ≥ 0
     μ ≥ 0

max -λ·b
s.t. Aᵗλ = μ
     λ ≥ 0
     μ ≥ 0

min λ·b
s.t. Aᵗλ ≥ 0
     λ ≥ 0

-------------
SVM
-------------

No soft margin etc.

xᵢ, yᵢ
xᵢ ∈ ℝⁿ
yᵢ ∈ {0, 1}

min ½‖wᵢ‖₂
s.t. (w·xᵢ+b)yᵢ ≥ 1

min ½w² - ∑αᵢ((w·xᵢ+b)yᵢ - 1)

min ½w² - (∑αᵢyᵢxᵢ).w - ∑αᵢbyᵢ + ∑αᵢ

min ½(w - (∑αᵢyᵢxᵢ))² - ½(∑αᵢyᵢxᵢ)² -∑αᵢbyᵢ + ∑αᵢ

min at w = ∑αᵢyᵢxᵢ

max  -½(∑αᵢyᵢxᵢ)² + ∑αᵢ
s.t. αᵢ ≥ 0
     ∑αᵢyᵢ = 0
(Uses xᵢ·xᵢ)

αᵢ > 0 ⇒  constraint tight
yᵢ(w·xᵢ+b) = 1
w·xᵢ+b = yᵢ 
b = yᵢ-w·xᵢ for some i with αᵢ>0

y ←  sign(w·x+b)
y ←  sign(∑αᵢyᵢxᵢ·x+b)
Hoping only small number of αᵢ are non-zero making this calculation easy
Uses xᵢ·x

Non-separable case allowing slack
---------------------------------
xᵢ, yᵢ
xᵢ ∈ ℝⁿ
yᵢ ∈ {0, 1}

min ½‖wᵢ‖₂ + C∑ξᵢ
s.t. (w·xᵢ+b)yᵢ ≥ 1-ξᵢ
     ξᵢ ≥ 0

min ½w² + C∑ξᵢ - ∑αᵢ((w·xᵢ+b)yᵢ - 1 + ξᵢ) - ∑βᵢξᵢ

min ½w² - (∑αᵢyᵢxᵢ).w - ∑αᵢbyᵢ + ∑αᵢ + C∑ξᵢ - ∑αᵢξᵢ - ∑βᵢξᵢ

min - ½(∑αᵢyᵢxᵢ)² + ∑αᵢ

So  C = αᵢ+βᵢ
∑αᵢyᵢ = 0

Similar to before but C ≥ αᵢ ≥ 0

I guess αᵢ weigh how important the support vectors are and C limits this
=======
degenerate???
-----
min 0
s.t. f(x) ≤ 0

max λ min x λf(x)
      s.t. λ ≥ 0

Either λ ≥ 0 x* = min f(x)
       or λ = 0

Strong Duality
--------------
https://people.orie.cornell.edu/dpw/orie6300/Lectures/lec08.pdf


Theorem 3 (Strong Duality) There are four possibilities:
1. Both primal and dual have no feasible solutions (are infeasible).
2. The primal is infeasible and the dual unbounded.
3. The dual is infeasible and the primal unbounded.
4. Both primal and dual have feasible solutions and their values are equal.
